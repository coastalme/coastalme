/home/dave/coast/CoastalME/src/2d_shape.h:39:25: warning: member variable 'm_VPoints' has protected visibility [misc-non-private-member-variables-in-classes]
   39 |    vector<CGeom2DPoint> m_VPoints;
      |                         ^
/home/dave/coast/CoastalME/src/2di_shape.h:38:26: warning: member variable 'm_VPoints' has protected visibility [misc-non-private-member-variables-in-classes]
   38 |    vector<CGeom2DIPoint> m_VPoints;
      |                          ^
/home/dave/coast/CoastalME/src/calc_curvature.cpp:39:1: warning: included header coast.h is not used directly [misc-include-cleaner]
   39 | #include "coast.h"
      | ^~~~~~~~~~~~~~~~~~
   40 | 
/home/dave/coast/CoastalME/src/calc_shadow_zones.cpp:41:1: warning: included header coast.h is not used directly [misc-include-cleaner]
   41 | #include "coast.h"
      | ^~~~~~~~~~~~~~~~~~
   42 | #include "simulation.h"
/home/dave/coast/CoastalME/src/cme.h:1322:9: warning: member variable 'chFill' has public visibility [misc-non-private-member-variables-in-classes]
 1322 |    char chFill;
      |         ^
/home/dave/coast/CoastalME/src/cme.h:1323:8: warning: member variable 'nWidth' has public visibility [misc-non-private-member-variables-in-classes]
 1323 |    int nWidth;
      |        ^
/home/dave/coast/CoastalME/src/coast.h:31:10: warning: circular header file dependency detected while including 'coast_landform.h', please check the include path [misc-header-include-cycle]
   31 | #include "coast_landform.h"
      |          ^
/home/dave/coast/CoastalME/src/coast_landform.h:30:10: note: 'coast.h' included from here
   30 | #include "coast.h"
      |          ^
/home/dave/coast/CoastalME/src/coast_landform.cpp:27:10: note: 'coast_landform.h' included from here
   27 | #include "coast_landform.h"
      |          ^
/home/dave/coast/CoastalME/src/coast_landform.h:30:10: warning: circular header file dependency detected while including 'coast.h', please check the include path [misc-header-include-cycle]
   30 | #include "coast.h"
      |          ^
/home/dave/coast/CoastalME/src/coast.h:31:10: note: 'coast_landform.h' included from here
   31 | #include "coast_landform.h"
      |          ^
/home/dave/coast/CoastalME/src/assign_landforms.cpp:37:10: note: 'coast.h' included from here
   37 | #include "coast.h"
      |          ^
/home/dave/coast/CoastalME/src/coast_landform.h:39:8: warning: member variable 'm_nCoast' has protected visibility [misc-non-private-member-variables-in-classes]
   39 |    int m_nCoast;
      |        ^
/home/dave/coast/CoastalME/src/coast_landform.h:42:8: warning: member variable 'm_nPointOnCoast' has protected visibility [misc-non-private-member-variables-in-classes]
   42 |    int m_nPointOnCoast;
      |        ^
/home/dave/coast/CoastalME/src/coast_landform.h:45:8: warning: member variable 'm_nCategory' has protected visibility [misc-non-private-member-variables-in-classes]
   45 |    int m_nCategory;
      |        ^
/home/dave/coast/CoastalME/src/coast_landform.h:48:11: warning: member variable 'm_dTotAccumWaveEnergy' has protected visibility [misc-non-private-member-variables-in-classes]
   48 |    double m_dTotAccumWaveEnergy;
      |           ^
/home/dave/coast/CoastalME/src/coast_landform.h:51:14: warning: member variable 'pCoast' has protected visibility [misc-non-private-member-variables-in-classes]
   51 |    CRWCoast* pCoast;
      |              ^
/home/dave/coast/CoastalME/src/create_profiles.cpp:637:10: warning: variable 'nHitCoast' of type 'int' can be declared 'const' [misc-const-correctness]
  637 |          int nHitCoast = m_pRasterGrid->m_Cell[nXTmp][nYTmp].nGetCoastline();
      |          ^
      |              const 
/home/dave/coast/CoastalME/src/create_profiles.cpp:1640:19: warning: variable 'nHitCoast' of type 'int' can be declared 'const' [misc-const-correctness]
 1640 |                   int nHitCoast = m_pRasterGrid->m_Cell[nX][nY].nGetCoastline();
      |                   ^
      |                       const 
/home/dave/coast/CoastalME/src/do_cliff_collapse.cpp:615:7: warning: variable 'nRemainingProfiles' of type 'int' can be declared 'const' [misc-const-correctness]
  615 |       int nRemainingProfiles = tMax(1, nTalusWidthInCells - nDepProfile);
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/gis_raster.cpp:64:6: warning: no header providing "CSimulation" is directly included [misc-include-cleaner]
   24 | void CSimulation::InitializeGDALPerformance(void)
      |      ^
/home/dave/coast/CoastalME/src/gis_raster.cpp:277:4: warning: no header providing "vector" is directly included [misc-include-cleaner]
   24 |    vector<CGeom2DIPoint> VPtiBoundingBoxCorner;
      |    ^
/home/dave/coast/CoastalME/src/gis_utils.cpp:541:37: warning: no header providing "vector" is directly included [misc-include-cleaner]
   52 | CGeom2DPoint CSimulation::PtAverage(vector<CGeom2DPoint> *pVIn)
      |                                     ^
/home/dave/coast/CoastalME/src/gis_vector.cpp:943:7: warning: variable 'strFieldValue1' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
  943 |       string strFieldValue1 = "CliffEdge";
      |       ^
      |              const 
/home/dave/coast/CoastalME/src/gis_vector.cpp:944:7: warning: variable 'OGRField1' of type 'OGRFieldDefn' can be declared 'const' [misc-const-correctness]
  944 |       OGRFieldDefn OGRField1(strFieldValue1.c_str(), OFTInteger);
      |       ^
      |                    const 
/home/dave/coast/CoastalME/src/init_grid.cpp:46:1: warning: included header coast.h is not used directly [misc-include-cleaner]
   46 | #include "coast.h"
      | ^~~~~~~~~~~~~~~~~~
   47 | #include "simulation.h"
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:28:1: warning: included header cpl_port.h is not used directly [misc-include-cleaner]
   28 | #include <cpl_port.h>
      | ^~~~~~~~~~~~~~~~~~~~~
   29 | #include <iostream>
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:30:12: warning: using decl 'cerr' is unused [misc-unused-using-decls]
   30 | using std::cerr;
      |            ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:30:12: note: remove the using
   30 | using std::cerr;
      | ~~~~~~~~~~~^~~~~
   31 | using std::cout;
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:31:12: warning: using decl 'cout' is unused [misc-unused-using-decls]
   31 | using std::cout;
      |            ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:31:12: note: remove the using
   31 | using std::cout;
      | ~~~~~~~~~~~^~~~~
   32 | using std::endl;
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:32:12: warning: using decl 'endl' is unused [misc-unused-using-decls]
   32 | using std::endl;
      |            ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:32:12: note: remove the using
   32 | using std::endl;
      | ~~~~~~~~~~~^~~~~
   33 | 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:35:12: warning: using decl 'resetiosflags' is unused [misc-unused-using-decls]
   35 | using std::resetiosflags;
      |            ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:35:12: note: remove the using
   35 | using std::resetiosflags;
      | ~~~~~~~~~~~^~~~~~~~~~~~~~
   36 | using std::setiosflags;
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:36:12: warning: using decl 'setiosflags' is unused [misc-unused-using-decls]
   36 | using std::setiosflags;
      |            ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:36:12: note: remove the using
   36 | using std::setiosflags;
      | ~~~~~~~~~~~^~~~~~~~~~~~
   37 | using std::setprecision;
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:37:12: warning: using decl 'setprecision' is unused [misc-unused-using-decls]
   37 | using std::setprecision;
      |            ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:37:12: note: remove the using
   37 | using std::setprecision;
      | ~~~~~~~~~~~^~~~~~~~~~~~~
   38 | using std::setw;
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:38:12: warning: using decl 'setw' is unused [misc-unused-using-decls]
   38 | using std::setw;
      |            ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:38:12: note: remove the using
   38 | using std::setw;
      | ~~~~~~~~~~~^~~~~
   39 | 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:81:13: warning: variable 'dElevLeft' of type 'double' can be declared 'const' [misc-const-correctness]
   81 |             double dElevLeft = m_pRasterGrid->m_Cell[nX - 1][nY].dGetSedimentTopElev();
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:82:13: warning: variable 'dElevRight' of type 'double' can be declared 'const' [misc-const-correctness]
   82 |             double dElevRight = m_pRasterGrid->m_Cell[nX + 1][nY].dGetSedimentTopElev();
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:83:13: warning: variable 'dElevUp' of type 'double' can be declared 'const' [misc-const-correctness]
   83 |             double dElevUp = m_pRasterGrid->m_Cell[nX][nY - 1].dGetSedimentTopElev();
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:84:13: warning: variable 'dElevDown' of type 'double' can be declared 'const' [misc-const-correctness]
   84 |             double dElevDown = m_pRasterGrid->m_Cell[nX][nY + 1].dGetSedimentTopElev();
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:87:13: warning: variable 'dSlopeX' of type 'double' can be declared 'const' [misc-const-correctness]
   87 |             double dSlopeX = (dElevRight - dElevLeft) / (2.0 * m_dCellSide);
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:88:13: warning: variable 'dSlopeY' of type 'double' can be declared 'const' [misc-const-correctness]
   88 |             double dSlopeY = (dElevDown - dElevUp) / (2.0 * m_dCellSide);
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:89:13: warning: variable 'dSlope' of type 'double' can be declared 'const' [misc-const-correctness]
   89 |             double dSlope = sqrt(dSlopeX * dSlopeX + dSlopeY * dSlopeY);
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:89:29: warning: no header providing "sqrt" is directly included [misc-include-cleaner]
   28 |             double dSlope = sqrt(dSlopeX * dSlopeX + dSlopeY * dSlopeY);
      |                             ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:105:10: warning: variable 'dSlope' of type 'double' can be declared 'const' [misc-const-correctness]
  105 |          double dSlope = m_pRasterGrid->m_Cell[nX][nY].dGetSlope();
      |          ^
      |                 const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:140:35: warning: no header providing "std::make_pair" is directly included [misc-include-cleaner]
   30 |             VStack.push_back(std::make_pair(nX, nY));
      |                                   ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:145:16: warning: variable 'currentCell' of type 'pair<int, int>' can be declared 'const' [misc-const-correctness]
  145 |                pair<int, int> currentCell = VStack.back();
      |                ^
      |                               const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:148:16: warning: variable 'nCurX' of type 'size_t' (aka 'unsigned long') can be declared 'const' [misc-const-correctness]
  148 |                size_t nCurX = static_cast<size_t>(currentCell.first);
      |                ^
      |                       const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:148:16: warning: no header providing "size_t" is directly included [misc-include-cleaner]
   29 |                size_t nCurX = static_cast<size_t>(currentCell.first);
      |                ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:149:16: warning: variable 'nCurY' of type 'size_t' (aka 'unsigned long') can be declared 'const' [misc-const-correctness]
  149 |                size_t nCurY = static_cast<size_t>(currentCell.second);
      |                ^
      |                       const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:161:51: warning: no header providing "std::make_pair" is directly included [misc-include-cleaner]
  161 |                VCurrentCliffRegion.push_back(std::make_pair(nCurX, nCurY));
      |                                                   ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:164:38: warning: no header providing "std::make_pair" is directly included [misc-include-cleaner]
  164 |                VStack.push_back(std::make_pair(nCurX - 1, nCurY));     // North
      |                                      ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:165:38: warning: no header providing "std::make_pair" is directly included [misc-include-cleaner]
  165 |                VStack.push_back(std::make_pair(nCurX - 1, nCurY + 1)); // Northeast
      |                                      ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:166:38: warning: no header providing "std::make_pair" is directly included [misc-include-cleaner]
  166 |                VStack.push_back(std::make_pair(nCurX, nCurY + 1));     // East
      |                                      ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:175:13: warning: variable 'dCliffRegionArea' of type 'int' can be declared 'const' [misc-const-correctness]
  175 |             int dCliffRegionArea = static_cast<int>(VCurrentCliffRegion.size());
      |             ^
      |                 const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:202:11: warning: no header providing "CGeom2DIPoint" is directly included [misc-include-cleaner]
   25 |    vector<CGeom2DIPoint> V2DIPossibleStartCell;
      |           ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:256:7: warning: variable 'nXStart' of type 'int' can be declared 'const' [misc-const-correctness]
  256 |       int nXStart = V2DIPossibleStartCell[nStartPoint].nGetX();
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:257:7: warning: variable 'nYStart' of type 'int' can be declared 'const' [misc-const-correctness]
  257 |       int nYStart = V2DIPossibleStartCell[nStartPoint].nGetY();
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:441:10: warning: no header providing "CGeomLine" is directly included [misc-include-cleaner]
   25 |          CGeomLine CliffEdgeExtCRS;
      |          ^
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:474:7: warning: variable 'ForwardValidated' of type 'CGeomLine' can be declared 'const' [misc-const-correctness]
  474 |       CGeomLine ForwardValidated = nValidateCliffToeDirection(CliffEdge, false);
      |       ^
      |                 const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:516:4: warning: variable 'nSize' of type 'int' can be declared 'const' [misc-const-correctness]
  516 |    int nSize = CliffEdge.nGetSize();
      |    ^
      |        const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:522:7: warning: variable 'nPoint' of type 'int' can be declared 'const' [misc-const-correctness]
  522 |       int nPoint = bReverse ? (nSize - 1 - i) : i;
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:523:7: warning: variable 'nNextPoint' of type 'int' can be declared 'const' [misc-const-correctness]
  523 |       int nNextPoint = bReverse ? (nSize - 2 - i) : (i + 1);
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:543:7: warning: variable 'nDirX' of type 'int' can be declared 'const' [misc-const-correctness]
  543 |       int nDirX = nNextX - nX;
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:544:7: warning: variable 'nDirY' of type 'int' can be declared 'const' [misc-const-correctness]
  544 |       int nDirY = nNextY - nY;
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:547:7: warning: variable 'nLeftX' of type 'int' can be declared 'const' [misc-const-correctness]
  547 |       int nLeftX = nX - nDirY;         // Rotate direction 90 degrees counter-clockwise
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:548:7: warning: variable 'nLeftY' of type 'int' can be declared 'const' [misc-const-correctness]
  548 |       int nLeftY = nY + nDirX;
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:549:7: warning: variable 'nRightX' of type 'int' can be declared 'const' [misc-const-correctness]
  549 |       int nRightX = nX + nDirY;        // Rotate direction 90 degrees clockwise
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:550:7: warning: variable 'nRightY' of type 'int' can be declared 'const' [misc-const-correctness]
  550 |       int nRightY = nY - nDirX;
      |       ^
      |           const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:557:10: warning: variable 'bLeftIsCliff' of type 'bool' can be declared 'const' [misc-const-correctness]
  557 |          bool bLeftIsCliff = m_pRasterGrid->m_Cell[nLeftX][nLeftY].bIsCliff();
      |          ^
      |               const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:558:10: warning: variable 'bRightIsCliff' of type 'bool' can be declared 'const' [misc-const-correctness]
  558 |          bool bRightIsCliff = m_pRasterGrid->m_Cell[nRightX][nRightY].bIsCliff();
      |          ^
      |               const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:564:13: warning: variable 'dLeftElev' of type 'double' can be declared 'const' [misc-const-correctness]
  564 |             double dLeftElev = m_pRasterGrid->m_Cell[nLeftX][nLeftY].dGetSedimentTopElev();
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/locate_cliff_toe.cpp:565:13: warning: variable 'dRightElev' of type 'double' can be declared 'const' [misc-const-correctness]
  565 |             double dRightElev = m_pRasterGrid->m_Cell[nRightX][nRightY].dGetSedimentTopElev();
      |             ^
      |                    const 
/home/dave/coast/CoastalME/src/read_input.cpp:445:30: warning: no header providing "strtod" is directly included [misc-include-cleaner]
   27 |             m_dSimDuration = strtod(strRH.c_str(), NULL) * m_dDurationUnitsMult;
      |                              ^
/home/dave/coast/CoastalME/src/read_input.cpp:643:37: warning: no header providing "atol" is directly included [misc-include-cleaner]
  643 |                   m_ulRandSeed[0] = atol(strRH.c_str());
      |                                     ^
/home/dave/coast/CoastalME/src/sediment_input_event.cpp:26:1: warning: included header cme.h is not used directly [misc-include-cleaner]
   26 | #include "cme.h"
      | ^~~~~~~~~~~~~~~~
   27 | #include "sediment_input_event.h"
/home/dave/coast/CoastalME/src/simulation.cpp:63:1: warning: included header coast.h is not used directly [misc-include-cleaner]
   63 | #include "coast.h"
      | ^~~~~~~~~~~~~~~~~~
   64 | 
/home/dave/coast/CoastalME/src/simulation.h:1850:13: warning: member variable 'LogStream' has public visibility [misc-non-private-member-variables-in-classes]
 1850 |    ofstream LogStream;
      |             ^
/home/dave/coast/CoastalME/src/update_grid.cpp:36:1: warning: included header coast.h is not used directly [misc-include-cleaner]
   36 | #include "coast.h"
      | ^~~~~~~~~~~~~~~~~~
   37 | 
/home/dave/coast/CoastalME/src/utils.cpp:33:1: warning: included header types.h is not used directly [misc-include-cleaner]
   33 | #include <sys/types.h>
      | ^~~~~~~~~~~~~~~~~~~~~~
   34 | #include <sys/wait.h>
/home/dave/coast/CoastalME/src/2d_shape.h:39:25: warning: member variable 'm_VPoints' has protected visibility [misc-non-private-member-variables-in-classes]
   39 |    vector<CGeom2DPoint> m_VPoints;
      |                         ^
/home/dave/coast/CoastalME/src/2di_shape.h:38:26: warning: member variable 'm_VPoints' has protected visibility [misc-non-private-member-variables-in-classes]
   38 |    vector<CGeom2DIPoint> m_VPoints;
      |                          ^
/home/dave/coast/CoastalME/src/cell.h:40:1: warning: included header cme.h is not used directly [misc-include-cleaner]
   40 | #include "cme.h"
      | ^~~~~~~~~~~~~~~~
   41 | #include "raster_grid.h"
/home/dave/coast/CoastalME/src/cme.h:1322:9: warning: member variable 'chFill' has public visibility [misc-non-private-member-variables-in-classes]
 1322 |    char chFill;
      |         ^
/home/dave/coast/CoastalME/src/cme.h:1323:8: warning: member variable 'nWidth' has public visibility [misc-non-private-member-variables-in-classes]
 1323 |    int nWidth;
      |        ^
/home/dave/coast/CoastalME/src/coast.h:31:10: warning: circular header file dependency detected while including 'coast_landform.h', please check the include path [misc-header-include-cycle]
   31 | #include "coast_landform.h"
      |          ^
/home/dave/coast/CoastalME/src/coast_landform.h:30:10: warning: circular header file dependency detected while including 'coast.h', please check the include path [misc-header-include-cycle]
   30 | #include "coast.h"
      |          ^
/home/dave/coast/CoastalME/src/coast.h:31:10: note: 'coast_landform.h' included from here
   31 | #include "coast_landform.h"
      |          ^
/home/dave/coast/CoastalME/src/cliff.h:29:10: note: 'coast.h' included from here
   29 | #include "coast.h"
      |          ^
/home/dave/coast/CoastalME/src/coast_landform.h:39:8: warning: member variable 'm_nCoast' has protected visibility [misc-non-private-member-variables-in-classes]
   39 |    int m_nCoast;
      |        ^
/home/dave/coast/CoastalME/src/coast_landform.h:42:8: warning: member variable 'm_nPointOnCoast' has protected visibility [misc-non-private-member-variables-in-classes]
   42 |    int m_nPointOnCoast;
      |        ^
/home/dave/coast/CoastalME/src/coast_landform.h:45:8: warning: member variable 'm_nCategory' has protected visibility [misc-non-private-member-variables-in-classes]
   45 |    int m_nCategory;
      |        ^
/home/dave/coast/CoastalME/src/coast_landform.h:48:11: warning: member variable 'm_dTotAccumWaveEnergy' has protected visibility [misc-non-private-member-variables-in-classes]
   48 |    double m_dTotAccumWaveEnergy;
      |           ^
/home/dave/coast/CoastalME/src/coast_landform.h:51:14: warning: member variable 'pCoast' has protected visibility [misc-non-private-member-variables-in-classes]
   51 |    CRWCoast* pCoast;
      |              ^
/home/dave/coast/CoastalME/src/simulation.h:67:1: warning: included header i_line.h is not used directly [misc-include-cleaner]
   67 | #include "i_line.h"
      | ^~~~~~~~~~~~~~~~~~~
   68 | #include "line.h"
/home/dave/coast/CoastalME/src/simulation.h:1850:13: warning: member variable 'LogStream' has public visibility [misc-non-private-member-variables-in-classes]
 1850 |    ofstream LogStream;
      |             ^
